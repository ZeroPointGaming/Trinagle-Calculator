<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>